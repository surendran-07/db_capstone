<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='LittleLemon_rawdata' inline='true' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LittleLemon_rawdata' name='textscan.1so5sgz1h0r4sj11mjzf10mb6fys'>
            <connection class='textscan' directory='C:/Users/yasmi/Desktop/Coursera/MetaDatabaseEngineerCertificate/Capstone/db-capstone-project/Data' filename='little-lemon-rawdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1so5sgz1h0r4sj11mjzf10mb6fys' name='little-lemon-rawdata.csv' table='[little-lemon-rawdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='date' name='Order Date' ordinal='1' />
            <column datatype='date' name='Delivery Date' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='integer' name='CustomerID' ordinal='4' />
            <column datatype='string' name='City' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='Country Code' ordinal='7' />
            <column datatype='real' name='Cost' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Delivery Cost' ordinal='12' />
            <column datatype='integer' name='MenuID' ordinal='13' />
            <column datatype='string' name='Course Name' ordinal='14' />
            <column datatype='string' name='Cuisine Name' ordinal='15' />
            <column datatype='string' name='Starter Name' ordinal='16' />
            <column datatype='string' name='Desert Name' ordinal='17' />
            <column datatype='string' name='Drink' ordinal='18' />
            <column datatype='string' name='Sides' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delivery Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Delivery Date]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Delivery Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delivery Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Delivery Cost]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Delivery Cost</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MenuID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MenuID]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>MenuID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Course Name]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Course Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cuisine Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cuisine Name]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Cuisine Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starter Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Starter Name]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Starter Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desert Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Desert Name]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Desert Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drink</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drink]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Drink</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sides</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sides]</local-name>
            <parent-name>[little-lemon-rawdata.csv]</parent-name>
            <remote-alias>Sides</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[ctd:Order ID:qk]&quot;' value='Number of Orders' />
        </aliases>
      </column>
      <column caption='Profit' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Calculation_1894045130772443136]' role='measure' type='quantitative' visual-totals='Sum'>
        <calculation class='tableau' formula='[Sales] - [Cost]' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.00%' name='[Calculation_1894045130772783105]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1894045130772443136])/sum([Sales])' />
      </column>
      <column caption='Profit per Order' datatype='real' name='[Calculation_1894045130776817669]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1894045130772443136]) / countd([Order ID])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
      <column caption='First Name' datatype='string' name='[Customer Name - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Customer Name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Last Name' datatype='string' name='[Customer Name - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Customer Name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name], &quot; &quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
      <column caption='Menu ID' datatype='integer' name='[MenuID]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column caption='little-lemon-rawdata.csv' datatype='table' name='[__tableau_internal_object_id__].[little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C]' role='measure' type='quantitative' />
      <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Cuisine Name)' hidden='true' name='[Action (Cuisine Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Cuisine Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date))' hidden='true' name='[Action (QUARTER(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date)) 1' hidden='true' name='[Action (YEAR(Order Date)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date))' hidden='true' name='[Action (YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Customer Name Set' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Angel Veschambre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Araldo Gutman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardene Davydenko&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arlette Magauran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bennett Pendered&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burke Jupp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Calvin Aucock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chauncey Barrott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chrotoem Estevez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cullie McBrady&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dareen Soutar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Egon Lawrance&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elisabetta Jacke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elora Eliesco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evelyn Serrier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evvie Crossby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabe Boyan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gallagher Benyon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giacopo Bramich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giustina Thorne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gloriane Allsepp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamnet Coultas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harriett O&apos;Sirin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Herculie Eastment&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isac Crimpe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jillene Maro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Judy Swainson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kim McCloughlin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kimble Wayvill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Konrad Standering&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korney O&apos;Carney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leslie Noden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lia Bonar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marena Jacox&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mikael O&apos;Keevan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nelli Myrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nessie Wheal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Orel Gawthrope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pete Morden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pietra Paute&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quintus Parcells&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem Morgen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sander Maloney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serene Steadman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shandy Sefton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sid Oultram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stan Clethro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steffane Karpol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xymenes Hands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zebedee Spafford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agnes Acey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alard Briat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ali Einchcombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Antonino McMains&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blancha Trippack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brook Begent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlye Chiswell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carney Speer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carol-jean Croston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Claire Morland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyndi Ruler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cynthy Stovold&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dacey Witherden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dannye Passmore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dill Beardshall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emmalynne Hairs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emmerich Ochterlony&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ermina Kitter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Francis Runciman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabrielle Coxall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hakeem Leadston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hebert Aubin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henrie Ledward&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ingamar Forker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jilleen Foux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karissa Sancraft&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karoline Pocock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kellina Oates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korney Buffery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kym Lepard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laina Thurborn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexie Spinetti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lilian Dislee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Magdalen Lacheze&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marketa Olman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mattie Brenston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mignonne Shepland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morganne Brecknell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mureil Codman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paton Fritzer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rivi Bowart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roth Cousans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serena Yerby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sherilyn Ilewicz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spenser Wandless&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Susette O&apos;Neil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tasia Fautly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uriel Grooby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valida Greenhill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yardley Eliet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adham Heyns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alberik Fancy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anjela Shobrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arnie Jay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ashil Brogini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barb Murfett&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berne Banbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charin Pinckard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charline Warriner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cirilo Koschek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Deck Paulat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennison Qusklay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dolorita Drayton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dulcie Lax&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Durante Bullers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emilie Faircley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Everard Trasler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fawnia Bartosch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fielding Struys&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gordan Hitscher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gregg Yellowlea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenville Hyne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanni Dunbleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ignace Cooney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jo O&apos;Nowlan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Julianna Jostan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kali Avis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Midson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kore Smurfit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Locke Janaway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucho McGerraghty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lulu Hastin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madelin Giacomi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maribelle Allcroft&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mateo Wightman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mathew Groucutt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitzi De Mico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Olly Dobbinson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pablo Dracksford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paxon Jeffcoat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Petronille Scrimgeour&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raymond Cranage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Read Trusty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reta Leipoldt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steward Lavies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiffani Halstead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tildy Shanks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valma Brideau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Veradis Tiddy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weston Dearden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adamo Rumens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alberik Rowcastle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Annmarie Bountiff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia McNess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baldwin Colchett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bertrand Bilton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biddy Spadoni&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carleen Gyver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carolan Di Giacomo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Darla Kubacek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dennie Lilloe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Devonne Whal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Doll Friary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Doreen Sothcott&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elfrieda Umbers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Esra Mc Meekan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fredi Helks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgeanna Boulton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenville Penburton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ham Penhall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hedi Pellington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ives Darmody&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacynth Clubb&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jenda Castellino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jessey Doddrell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Donner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josephine Archer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karoly Ivie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kelsy Schroder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malinde Firbanks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Margarette Hobell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mariann Ibbeson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mary Jellett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mattie Winyard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Merwin Pikhno&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mona Rudwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Quinn Stamps&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ram Chaudhry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richie Brydson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roxana Dicte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sayer Goudman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schuyler Walewski&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sibley Rodder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrye Littlechild&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vivie Twinning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wandie Yeeles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waylan Grieve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willi Voce&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willow Burmingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Windham Meekin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aaron Cromley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anastasia Baudy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anatole Desforges&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anny Pattemore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ash Lodford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Averell Joint&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Becki Bonsall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Borden Hacking&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Callie Dunning&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cathe Snar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christoper Myrkus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Codee Pindar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delilah Ayerst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desdemona Dobbinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enrika Marty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enriqueta Kirwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Evan Goldsbury&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eyde Ellerton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gay Skechley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ginevra Pally&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenville Bottomore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gualterio Backshall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlie Jindracek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harry Beak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henryetta Kunes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ibrahim Jurries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jere Whitebrook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leanna Chapelhow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leanna Dur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Licha Verden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Linc Martynov&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lise Fegan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Livvyy Grombridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcelia Kerswell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maryellen Gligori&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nels Ordish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Petronille Southwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ram Sinclaire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Raquel Borham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rayna Strathearn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rayner Lukianovich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandy Rubinowicz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shandeigh Andreas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sherm Probat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sol Hynam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sophey Garling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamarah Filasov&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teriann Olivari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vale Norwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Web O&apos;Howbane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ainslee Feighney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aldrich Phythien&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alfreda Chasmer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ara McWard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barby Noell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentley Gwyneth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bobby Blazewski&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boot Burree&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bradford Rafe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleon Moreton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cornela LaBastida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Debbi Gaule&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deloria Hannen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dorise Reames&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eba Harriagn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eleonore Stitcher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Farrel Teare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Filmer Floyd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florella Reape&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forester Buxcey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garvin Guerrazzi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gradey O&apos;Gready&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gusella Wadeling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gwenora Beauchamp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haslett Jenkyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Igor Durrand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jobie Coaten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kalinda Grestye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kathleen Mac Giolla Pheadair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Aylett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lynsey Ludlamme&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mano Abrahamson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Margarita Mancktelow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marsh Fransoni&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mary Demangel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melita Drinkale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melloney Schimke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monique Fry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natka Featenby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pansie Alldis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Porty Auston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Nordass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reuben Iannello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rhetta Nevill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roxine Humphries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryley McKillop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sully Cunney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Verena Garman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Veronique Caramuscia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viva Foulstone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anastasie Jahnisch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Antonella Ochterlony&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Audra Hebborn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barnabas Gerrell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baxy Dunkerley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chaddy Mangeney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charil Fanton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christoforo Vagg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cornelius Harkess&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crysta Garratty&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cynthea O&apos;Hickee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Devland Pagett&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dieter Crannis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eimile Matz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethelbert Cordeux&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ezri Gouck&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fax Rojahn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gail Grigaut&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Granger Aiers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Griz Tawse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haily Izakoff&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ives Armstead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jerome Ovitts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jerrie Jiran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jillayne Gaiford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jory Glave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karia Sonier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Katie Betancourt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kaylyn Colebourne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonie Battin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Les Harmson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Linus Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marillin Tieman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Melessa Lecordier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Melicent Gieves&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montgomery Spileman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nancy Rollinshaw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perrine Scalera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven Cawkwell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rici Bollin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rorie Colicot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rubin Ind&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheela Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sindee Drynan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skipp Lowater&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thorny Westrip&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wanda Ramas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ximenez Meredith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yvon Chasmor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zolly Heinzel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aime Ferry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alexia Candelin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allyn Gurnay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anabelle Dominelli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ariadne Copeland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bonnee Keller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carol-jean Sodory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Celine Coopland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charita Bosworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cissy Blondelle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarette Barreau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deane Benbough&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Devy Hookes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dicky Van der Son&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug Logg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ellis Kops&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Enid Francescuccio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erv Padrick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gage Tocknell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gawain Willmont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Giffy Wreath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Heinrick Setchfield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hervey Ganning&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackelyn Jacox&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jefferson Lauderdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kally Biers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kele Bracknell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelwin Ryle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koo Vinick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lana Boyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lawrence O&apos;Cahey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lilyan Schohier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lorette Golsthorp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lorna Bogart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Merill Leyninye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mill Lambell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miquela Dutnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myra Zaczek&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natty Murt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noni Quickenden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patrizia Kunrad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rowan Grover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sandor Barradell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steffie Slemmonds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stephi Broose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taffy Shipcott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theadora Huetson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vaughan Gorch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virgie Belhomme&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zorana Diggin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alexandros Brookfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alisander Cornelisse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allyce Mantione&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alyse Pimlett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amandi McConaghy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amandie Rohmer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Annaliese Brunsden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cahra Delacoste&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carena Nucator&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charline Windrus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christi Flute&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordelia Whicher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darby McLae&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delly Ventum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dre Danher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ely Doodson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Erika Greensmith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eva Dulake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garek Gearty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gianni Aistrop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gigi Trunchion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Granville Mallison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Horatio Codi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Howie Flamank&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inez Flade&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jesse Martelet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jozef Godson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kaleena Philips&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kristoffer Pales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lance Cheatle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laurianne Diehn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lucais Sewards&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maressa Fruish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mariquilla Labbe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mei Scrogges&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ondrea Keyser&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paco Towersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philomena Petracchi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prudence Eastlake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rana Rait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rene Clements&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rooney Milbourne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Plaschke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steward Doyland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tera Stockdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tricia Bellsham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trixy Southwick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ulberto Alyutin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ulick Tebboth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyn Attwoull&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandr McGill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alida Dumphy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allyce Berthon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ardenia Lobb&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bianka McLanaghan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bibbie Bover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braden Bartolacci&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brandon Cocklie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cristabel Nutty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dal Raper&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Debbie Noteyoung&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dore Coyett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dwain Eccott&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elsworth Stannas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emilee Riddeough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Felix Ouver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Florinda Cellier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fred Tatersale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gale Reeves&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gizela Northover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guthrey Juara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guthry Galpin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hermine Dorton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Horatio Lundy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Janeva Silman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaynell Alty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Josiah Thayre&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalindi Ryman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kathy Fairlam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;King Hillin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mady McMennum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marsiella Duprey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Megan Beddows&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mellicent Philliphs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Merrill Sawford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nelie Cleare&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nels Hargreaves&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olive Jeannon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raye Rossant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reggie Hallaways&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renata Vlach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riccardo Jahner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roch Panchen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sabra Corry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Selia Grigoroni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tatiania O&apos;Crigane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tony Crabtree&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wakefield Strotton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waldo Tomkiss&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yorgo Muzzillo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adaline Reichartz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adria Heller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aubine Chardin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bambie Frears&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ber Dillet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boot Terbeck&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bree Bleas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brook Rainger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cathee Briscam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charisse Risso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deina Agus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donni Tatem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dorie Cammell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egbert Mollnar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ephrem Steers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ferdinand Fowley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fidelity Banham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gilberta Sabberton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Godfrey Jellicorse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gualterio Paget&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamlen Mashro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hilly Leahey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Janith Bowra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Julie Brandes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Julina Di Franceschi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelbee Illesley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kellyann Sambells&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenna Lideard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kristian Beeken&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonora Tullett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manolo Russ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Melinda O&apos;Brogan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Melodee Gartshore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Merrill Baudon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nadine Cudbird&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natala Stobbe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicole Linnit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noel Ladley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pen Pruce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raye Fyldes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Renard Crispin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seamus Hearl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Selena Relton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sherye Christmas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sibyl Cuphus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanner Garner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tersina Wolfer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Webster Lomax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ximenes Carnachen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yankee Penright&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Abigail Struis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adiana Shirtliff&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adrianne Freeland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Agretha Dutteridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anders Stowe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Berte Tootin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beth Crocket&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brit Northfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlin Brabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll Tear&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Celle Oller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chastity Medlar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Del Hughman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dene Dawby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Durand Kitt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elke Dumingos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fanni Caccavella&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Felita Dovey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Cole&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gardy Neljes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hallie Roddam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hana Livesay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harriott Manby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henrie Karolovsky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jazmin Torald&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jehu Dauney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Junie Older&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kerri Barnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiersten Dalliwater&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Killy Condie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Klement Brothwell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauralee Beteriss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lottie Schultheiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marchelle Annes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nathanil Eykel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nertie Igglesden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nev Bompas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Odilia Bockett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pauline Danihelka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Phil Schapero&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Renato Paulin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sharon Lazare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sinclare Milburne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Skippy McIlwain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stirling Santry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sue Fargie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tibold MacGorley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valerye Phorsby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yorgos BoHlingolsen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zora Hanalan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allie Turbard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amaleta Brattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andrej Wolfindale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Annice Maxworthy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Armstrong Collerd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aube Francescuzzi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beryl Coo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carree Jeffree&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caterina Sweetnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chloette Pyke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cori Percifer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cornall Pimlock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Desiri Issac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douglas O&apos; Cloney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ernestine Merrgen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Essy Licence&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethelind Schnieder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ezequiel Benion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gearard Rowston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Goldie O&apos;Sherrin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gothart Domesday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry Reaney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hurlee Dhennin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hymie Meadowcroft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jemmy Whelan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonell Aiton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Julietta Legerwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kariotta Core&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lenci McFadzean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lenore Tabb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lind Haggath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mariel Bourdel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marys Offen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melisent Claessens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moishe Constant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Obidiah Zanicchi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paddie Tellenbrok&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paulie Lemerle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pierson Baal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reg Lepper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robbin Shottin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saul Parsonage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shannon Osban&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheffield Turbitt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tamma Clink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Theda Jagoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Virginie McGrey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Winnah Laye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zach Bondley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zena Todari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alan Paskell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alena Geratasch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ansell Lethlay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Mathewson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belle Priver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beret Behneke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berkley Petrashov&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berte Cornall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christian Yeld&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cirillo Creamen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Claybourne Costin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Currie Fidell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyril Copelli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Damiano Yurasov&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ellis Castanares&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elvina McGlynn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emelda Furbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ennis Dungate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faith Grushin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Far Emmanuele&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Felice Fiddler&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gerta Sanday&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hastie Charopen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hinda Giacopetti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jessalin Dimitriades&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jethro Fenwick&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joline Cancelier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joye MacHostie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karee Colchett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karlene Whetson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Krishnah Pearch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lew Allot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liam Downing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maddalena Wolfinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martainn Van Zon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melisse Southeran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mirna Rosita&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Gouldeby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onfroi Kornyakov&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pincas Stearn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reginauld Kelemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roddie Winterbotham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roosevelt Grigg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rosaleen Ionnisian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanan Mingay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shell Oldis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steven Cornbell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steward Pettinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tammara Burgyn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tommi Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adlai Arnull&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ag Gasking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anna-maria Neilan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Annaliese Cowill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barnabas Casson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berny Elcoate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Britta Barday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cecilia Swinbourne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Gummer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chrotoem Harniman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curry Able&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dalila Baldree&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Demetris McGibbon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dietrich Feetham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ezequiel Cunniff&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfax Seniour&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gennifer Koenen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ginelle Finnimore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graham Rumford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henryetta Kempster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hermione Tire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ilario Michie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isador Saffen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isidro Chelam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jakie Bullan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jameson Yaknov&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerrome Drohan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lethia Bodechon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Linus Gresham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lyndel Rodwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mack Fabri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madlin McGrory&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maighdiln Lamswood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marielle Buffey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maryjo Strangwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Othella Flood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phillis Denley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rania Gerritsma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rene Garn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rhody Dobbin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riley Curnnok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sabra Calbreath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Silva Addy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sly Fullwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Son Hurworth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Staci Coppens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Torr Windrus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vania Gilding&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Verene Beatens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Worth Laweles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aldin Purrier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alvan Winspare&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anna-diane Kopps&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Annamarie Taylot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ario Meekin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brendin Meedendorpe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burgess Hancill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Calla Lambal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cathleen Gooday&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danna O&apos;Nion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dell Hellsdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Yedall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dyanne Labbet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elladine Kobiela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erinn Vannar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Evangeline Bernet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flynn Magnay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freida Nannizzi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabey Macewan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;George Woodeson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gus Trower&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hale Danilchik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hermione Crix&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyacintha Hanne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jenilee Ricardou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julius Scutchin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kellby Quarterman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kipp Coulling&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissie Gosford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laney Fadden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Launce Sowerbutts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maisie Matyushkin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meg Reburn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merlina Lermit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michaela Babcock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mirilla Barff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norby Foord&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pail Duignan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Purcell Eyer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riordan Wormald&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Row Colchett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudolph Brozek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Salvidor Francesch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sharai MacMenamin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shelbi Grishakov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sorcha Beesley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wenona MacGinlay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Winn Raynes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yorgos Staite&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zita Coldbath&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alison Jamieson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Althea Jaggli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amye Limbert&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ariadne McCrie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boniface Giovannilli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Candy Simoncelli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cate Pagitt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charlot Warkup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christabella Coathup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clevey Garfit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Den Coppock.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Covet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dniren Copperwaite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominga Mc Kellen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elliott Avard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Esdras Scoffins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayre Crocket&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ferrel Jeratt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gauthier Sapshed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Giselle Abrahart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haskel Bowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hersh Bolgar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacquetta Plampin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Janeva Buist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jenn Josephoff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karel Welband&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiley Nare&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Law Leinweber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leonard Fuxman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leone Klulisek&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mable Browncey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malina Pengelly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malinde Blunn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlo McGeaney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natasha Cool&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neely Frankcomb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nickolai Balmer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nita Vannacci&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Payton Rissen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peggie Biddles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saw Aspenlon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheilah Maestro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tabbie Conboy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terencio Loche&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terry Iannitti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tiertza Barford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Titos Edgcumbe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Westbrooke Blindt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willa Wethered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zorine Delacourt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adria Koubu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alaric Thaw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aldric Jerman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alisander Shoebottom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alister Stronack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alli Cunney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ally McBrearty&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brynn Roset&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cal Rorke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caterina Rosenzwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christen Jedrachowicz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clive Crammy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colver McChesney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coralie Keenlayside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dian Collough&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elayne Karet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elisabetta Dubery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Essie Hagland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flem Haibel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forster Pervew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Galina Whaites&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germaine Vallack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hedi Chadwin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Heida Bohden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Herve Tunmore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hilary Pudner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jolee Linthead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joycelin Loghan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Katy Pine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koral Stampfer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lauri Hughill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lowrance Kleinmintz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucretia Whyborn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maible Dalgarno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manuel Gloyens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mickie Alred&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niles MacMenamy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ogdon Petr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orelle Beadel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rafferty Guyonneau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reilly Domonkos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roanna Safont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sabina Corneille&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Silas Asson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sullivan Eddoes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Susie Torrisi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tedda Plumridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tiler Kenrack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tyson Gahagan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vincent Boarer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adah Adamczewski&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adelheid Casolla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Almeta Laird-Craig&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Artair Lant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ash Boise&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basil Slarke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berenice Marples&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brittni Nielson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Camille Symmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Constantina Mottley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danyelle Butts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davita Baynham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Derry Davis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonne Yanuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodi Lenglet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Donella Tomasini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florella McMullen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fredelia Snedden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gerta Hehir&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Giusto Sheavills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hall Everil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hulda Nayshe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackie Kment&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacky Shapero&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jard Adderson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jarib Cranke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joanie Swindley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kameko Cockton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keane Wait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lorne Boldry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ludwig Fuxman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maison Shoreson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marcile Meffen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marice Leavens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maybelle Bellows&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melisandra Mungham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Padraic Zanutti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pietra Dibdall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Polly Murton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rodrigo D&apos;Alessio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roi Critzen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosanne Zorzutti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rowena Santori&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sterne Salterne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Keppe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stormi Duddin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sue Voyce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Viviyan Lantiff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walther Rablin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilek Ivanyushkin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aluin McUre&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andonis Rawling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Araldo Bramhall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audie Willcocks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aurie Unthank&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunhilda Beeze&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cele Dunster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Celinda Mamwell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cissiee Gobeau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cornelia Rowth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dinny Fonzone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dodi Basindale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominick Crafts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dru Priscott&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elvira Beverstock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emera Whitewood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estele Schultze&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ferguson Wilcocke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gavra Breslin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gordan Kneeshaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Halette O&apos;Hanley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hynda Skeel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Itch Merle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jill O&apos;Sirin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jilly Bursnoll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnette Haitlie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberli Eisenberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laverna Skeermer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lisle Scamadin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucilia Sandeman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maddie Raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malchy Huddlestone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marillin Dennehy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mart Malsher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Melesa Halahan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nadean Elves&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nerty Green&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Noby Torvey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paloma Spellar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Persis Chipchase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phillipe Ropartz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ravid Josephsen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stephanie Uman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thorin Jolliman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tiertza Doogan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Todd Riglesford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tove Jaquest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virginie Lammas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wynnie Feronet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ynez Hows&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2023</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2021</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2020</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='little-lemon-rawdata.csv' id='little-lemon-rawdata.csv_678D1D2F347046F4A6A5884238D83E0C'>
            <properties context=''>
              <relation connection='textscan.1so5sgz1h0r4sj11mjzf10mb6fys' name='little-lemon-rawdata.csv' table='[little-lemon-rawdata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='Order ID' ordinal='0' />
                  <column datatype='date' name='Order Date' ordinal='1' />
                  <column datatype='date' name='Delivery Date' ordinal='2' />
                  <column datatype='string' name='Customer Name' ordinal='3' />
                  <column datatype='integer' name='CustomerID' ordinal='4' />
                  <column datatype='string' name='City' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='string' name='Country Code' ordinal='7' />
                  <column datatype='real' name='Cost' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Delivery Cost' ordinal='12' />
                  <column datatype='integer' name='MenuID' ordinal='13' />
                  <column datatype='string' name='Course Name' ordinal='14' />
                  <column datatype='string' name='Cuisine Name' ordinal='15' />
                  <column datatype='string' name='Starter Name' ordinal='16' />
                  <column datatype='string' name='Desert Name' ordinal='17' />
                  <column datatype='string' name='Drink' ordinal='18' />
                  <column datatype='string' name='Sides' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_DB8591C3CE5046E78DD1F9F6DB3725B7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sales by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_C78F0DF3F0D64FC493B0A9107179E9D5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Total Sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_0C42E464F7AC4973A8C72F14F6A2566D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sales by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_55D20A8A41E3485EA651C1D527F5CD5A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sales by Cuisine' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_33A2A37B21504D5FAAE6E8AA4FC373F7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='Customer Sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_B9E908CFB6F84320BC5D8B4424FA2A8F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='Sales Bubble Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_DDB3163272224F45B42AFB6C0BACAFF8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='Cuisine Sales &amp; Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_051944F6279344FDBB5BB4A047A105D1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='Profit Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customers' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cuisine Sales &amp; Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Cuisine Name]' derivation='None' name='[none:Cuisine Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action5_33A2A37B21504D5FAAE6E8AA4FC373F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]</rows>
        <cols>([federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk] / [federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{B348ACCA-D888-4C5A-BD85-DAB7E434684A}' />
    </worksheet>
    <worksheet name='Customer Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[io:Customer Name Set:nk]'>
            <groupfilter function='member' level='[io:Customer Name Set:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' included-values='in-range'>
            <min>70.0</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[io:Customer Name Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]</rows>
        <cols>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{291DD475-A965-4420-998B-E5F85E29C7E7}' />
    </worksheet>
    <worksheet name='Profit Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column caption='Profit' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Calculation_1894045130772443136]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='[Sales] - [Cost]' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1894045130772443136]' derivation='Sum' name='[sum:Calculation_1894045130772443136:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action5_33A2A37B21504D5FAAE6E8AA4FC373F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]</rows>
        <cols>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{31302580-4AE7-4717-B0E7-2FBBBC2C3E9F}' />
    </worksheet>
    <worksheet name='Sales Bubble Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column caption='Profit' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Calculation_1894045130772443136]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='[Sales] - [Cost]' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894045130772443136]' derivation='Sum' name='[sum:Calculation_1894045130772443136:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action5_33A2A37B21504D5FAAE6E8AA4FC373F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Customer Name Set]' />
          <filter class='quantitative' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' included-values='in-range'>
            <min>4700.0</min>
            <max>5007.3299999999999</max>
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Customer Name Set]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <size column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <lod column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Customer Name:nk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2AE29383-16B8-4B6D-B961-92C6705A410C}' />
    </worksheet>
    <worksheet name='Sales by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]'>
            <groupfilter function='level-members' level='[Cuisine Name]' user:ui-action-filter='[Action4_55D20A8A41E3485EA651C1D527F5CD5A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]'>
            <groupfilter function='level-members' level='[tqr:Order Date:ok]' user:ui-action-filter='[Action3_0C42E464F7AC4973A8C72F14F6A2566D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic of the Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ivory Coast&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palestinian Territory&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pitcairn&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Reunion&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Barthelemy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Wallis and Futuna&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <color column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7307386C-F11A-485C-865E-37E750DC1566}' />
    </worksheet>
    <worksheet name='Sales by Cuisine'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Cuisine Name]' derivation='None' name='[none:Cuisine Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_DB8591C3CE5046E78DD1F9F6DB3725B7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]'>
            <groupfilter function='level-members' level='[tqr:Order Date:ok]' user:ui-action-filter='[Action3_0C42E464F7AC4973A8C72F14F6A2566D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[pcto:sum:Sales:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]' />
              <wedge-size column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <size column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]' />
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DE7F6FD0-AF7F-4E71-AC7B-F2D99A19A7B5}' />
    </worksheet>
    <worksheet name='Sales by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_DB8591C3CE5046E78DD1F9F6DB3725B7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]'>
            <groupfilter function='level-members' level='[Cuisine Name]' user:ui-action-filter='[Action4_55D20A8A41E3485EA651C1D527F5CD5A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]</rows>
        <cols>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{02042435-C891-45B4-AB38-834E497BE440}' />
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overview</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LittleLemon_rawdata' name='federated.0m52zxo0f50rh01cj4f8x0mltpob' />
          </datasources>
          <datasource-dependencies datasource='federated.0m52zxo0f50rh01cj4f8x0mltpob'>
            <column caption='Profit' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Calculation_1894045130772443136]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='[Sales] - [Cost]' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.00%' name='[Calculation_1894045130772783105]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1894045130772443136])/sum([Sales])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisine Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894045130772443136]' derivation='Sum' name='[sum:Calculation_1894045130772443136:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1894045130772783105]' derivation='User' name='[usr:Calculation_1894045130772783105:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[usr:Calculation_1894045130772783105:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[ctd:Order ID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[usr:Calculation_1894045130772783105:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[ctd:Order ID:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_DB8591C3CE5046E78DD1F9F6DB3725B7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]'>
            <groupfilter function='level-members' level='[Cuisine Name]' user:ui-action-filter='[Action4_55D20A8A41E3485EA651C1D527F5CD5A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]'>
            <groupfilter function='level-members' level='[tqr:Order Date:ok]' user:ui-action-filter='[Action3_0C42E464F7AC4973A8C72F14F6A2566D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Country)]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (QUARTER(Order Date))]</column>
            <column>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Cuisine Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]' value='159' />
            <format attr='text-align' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Multiple Values]' value='center' />
            <format attr='color' value='#000000' />
            <format attr='color' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Multiple Values]' value='#000000' />
            <format attr='font-size' field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Multiple Values]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='text-align' data-class='total' scope='rows' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{765CF362-1D31-4561-9FCB-0A2E027FA315}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Customers'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='55000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='55000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='55000' id='3' name='Customer Sales' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55000' id='11' name='Sales Bubble Chart' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43000' id='9' name='Profit Chart' w='49200' x='800' y='56000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43000' id='13' name='Cuisine Sales &amp; Profit' w='49200' x='50000' y='56000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='55000' id='3' is-fixed='true' name='Customer Sales' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55000' id='11' is-fixed='true' name='Sales Bubble Chart' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43000' id='9' is-fixed='true' name='Profit Chart' w='49200' x='800' y='56000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43000' id='13' is-fixed='true' name='Cuisine Sales &amp; Profit' w='49200' x='50000' y='56000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E0ADEB16-0B94-44D6-8B29-135878054530}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='21' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='15625' id='3' name='Total Sales' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53750' id='10' name='Sales by Country' w='56898' x='800' y='45250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28625' id='15' name='Sales by Year' show-title='false' w='98400' x='800' y='16625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53750' id='19' name='Sales by Cuisine' w='41502' x='57698' y='45250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='117' h='15625' id='3' is-fixed='true' name='Total Sales' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='28625' id='15' is-fixed='true' name='Sales by Year' show-title='false' w='98400' x='800' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53750' id='10' is-fixed='true' name='Sales by Country' w='56898' x='800' y='45250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53750' id='19' is-fixed='true' name='Sales by Cuisine' w='41502' x='57698' y='45250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C77BE59B-754B-41CF-A5D2-D2B657A08865}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Sales by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Cuisine'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Year'>
          <zoom type='entire-view' />
          <highlight field='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9D4DA9E2-DB29-403D-A615-EF0D58C34D1C}' />
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[:Measure Names]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A765981-1691-49F5-ACBC-25ED14FF63F6}' />
    </window>
    <window class='worksheet' name='Sales by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[avg:Calculation_1894045130772783105:qk]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16ED605D-5ABE-4CC6-B5CE-60ECEFCA2975}' />
    </window>
    <window class='worksheet' name='Sales by Cuisine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' type='size' />
            <card param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D0E5908-FDD8-4547-B97E-9F4B53721118}' />
    </window>
    <window class='worksheet' name='Sales by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Cuisine Name:nk]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[tyr:Order Date:ok]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5EA2A579-1687-4502-B027-982DC4918911}' />
    </window>
    <window class='dashboard' maximized='true' name='Customers'>
      <viewpoints>
        <viewpoint name='Cuisine Sales &amp; Profit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Customer Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Bubble Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B88FC687-D9BE-4383-BC0F-91EEB17F4113}' />
    </window>
    <window class='worksheet' name='Customer Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[io:Customer Name Set:nk]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D63938EB-9754-4280-BCF9-9D82B26A1403}' />
    </window>
    <window class='worksheet' name='Profit Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Calculation_1894045130772443136:vtsum:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14B7686F-8514-446A-B923-833F57E6652B}' />
    </window>
    <window class='worksheet' name='Sales Bubble Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Action (Customer Name)]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[Customer Name Set]</field>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5EA05365-35D9-4643-9927-19EF3087BD7C}' />
    </window>
    <window class='worksheet' name='Cuisine Sales &amp; Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m52zxo0f50rh01cj4f8x0mltpob].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1AB514C-0D81-4FDE-B7A3-F0916C9F8F6E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cuisine Sales &amp; Profit' width='192'>
      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
      8v8PebCcj21FyEcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Bubble Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5BkWXbe93v+pbflTXs7Mzt+F7szWGCxAAgnkABEhBz/kYMUQYoUFTKU
      RABBMUSZCIGSICgoiqAYAo1IwhBuDRa7szOzOzPb49r76uryLn3my+ev/siqmq7uslmVZjH9
      RUxMd3XWeyffu+fec8895/skIYTgKZ7iUwq51wY8xVP0Ek8d4Ck+1XjqAE/xqcZTB3iKTzWe
      OsBTfKrx1AGe4lONpw7wFJ9qPHWAp/hU46kDPMWnGk8d4Ck+1VB7bcBO2KjQ2KjTkDb+L0nb
      fv4pnqId9I0DCCFYa9rMVGssNyyKtkPD9fDDEEkCXVFIGjo502QsEWciGSeqqh13CCEEAkHV
      dah6TSzPxQ59gjBEAhRZIaJoRDWdtB4hpupdcVIhBL4IKTtN6p6N5Xu4oU8oBJIkockKUUUj
      phmkjQiG3Pln9f0IqZfFcEII7CDgysoaN9aKFG1n378rSzCZTPCZgTynMinkI365QgjKbpOF
      RoU1u44vwn39niGrDEYSjMZSHXGGQISsWDUWm1XKjsV+X15CMxiOJBmOJtFk5akzrKNnDuAF
      IZeWlvlgaQU32N/g2gn5iMkPToxyIpU89IsVQlByLKZqa1Rc+1DXGjDjnEzmj8QRQiGYb5R5
      WCvihH7b11EkmfFYmmOJLJqsHMqmPwvougMIIVhsWHzl/kPKzv5n/P3gXDbNjx6fwFTbi+y8
      MOBOeZmlZu3IbJKROJbIcjyRa2uVEkJQ8xxulpeoe0f3vAxZ5Vx6iLwZ+1SvBl11ACEEV1YL
      fOvhHEGHbps2DP78mRPko5ED2VX3HK4WF2gGXmfs0iM8mx3FUPbvnEIIFqwKdyorhB16XpPx
      DKeSA0ceQn6/oGsOIITg3YVlvju/2PF7RVSVnzt7kpF4bF92ld0mVwrz+47z20VU1Xk+N0ZU
      1fdl13StwFSt0FGbAIYiCS5mhpGlT19WvCvfWAjBR8urXRn8AE3f5/fuTFFoNvf8bNWzudyF
      wQ9g+S6XC3M4we4xvBCCmXqpK4MfYLlZ42ZpuWOrTD+jKw7wsFrjjZn5btxqE5bv8/t3H2D7
      wY6fsQOPK4UFgi4M/k/s8rha3P2eq3ade9XVrtkEsNSsMl0r8GnrkO24A1iex1enHu47XXeU
      KNoOb8zMbftSQyG4WVrCPURGpV1U3CZT1bVt7Wr6HrfKy123CWC6VqDkWD25d6/QUQcQQvD2
      3CINr/uDbAM31orMVOtP/HzJqlLs4cuerZepPZbVEUJwt7KCF+68anUSArhTWSEIu7ci9hod
      dYCCbXNttTtx7E4QwNtzC1viWz8MmKqu9c4oQCC4V13dsgqU3Sar9pPO2k00fJd5q9xTG7qJ
      jjmAEIL3F1d6Evo8jqWGxUz1k9z+olU91GHSUaHkWJuHbRtZn37AbL30qVkFOuYAThBwp9g/
      M8nGSiSEYKFR6bE1n2Bhfba1fK9v4m878Ck4jV6b0RV0zAGmylW8PppFHlSq2L5P3XOo+0d7
      An0YrNl1/DBgpVnri9VyA0tW9VOREepINagQgoeVoysnOAq4QchSw0KSex/6PAovDKl6Dlbg
      9tqULSi7TUIhUP6MnxB3ZAUQwGK9/5bQ+VqDstsfYcajKDsWtt+ZEox24YUBlt9fTtkJdMQB
      glBQcfd+eAtXL1GrNbnx3XfwPZcwCAk8j8ryMkIE3HnvEtXZe8w+mMNzXFZmZgh9H7dZo7S8
      RhiG+K5HGAaE+6goLTbtLS914d5tbl27zeLDOYIgwPc8qpUqnuNQX1uhbnt4jksYBLiuiwAq
      8ws0Ax/fD/Bdm6XZJXzPx3MdwjDEc1wWZ+bwfR/PdQmCgDAICMOQWqWK73l4rov7yPNpeA7N
      fTrA7K0b3L05he+6re/v+9QqVUrzU7zzp9+hVLXwPZ/Ab/3nNhtUVpe4/OF1vEd+Zz9ofAoc
      oCO1QCXb4Tev3Njzc6sP7lJdXsIzs7iLt5BjGdTYMH5lkXNf/CKzH1wiNGLoisP99y8z8Pzr
      xINVXCVOUK2D5LG6WGbs7HEGTp0nmdq99mcganIsq26WPdy/cZsTF05x+dvfRTfjOIFPLGXy
      8MpNBkYGUTI5br75PU48/xxSGPDiD3+e4r0pbt+9gS+ipFIRZEkFVaf88CZybIBEfgglsAhF
      gOuFaLLADwWyHicR17FKZdKDOVZLDq9+4QUAIoqGs97Mshfu37jNydOjfO87V1ClAD01QMQQ
      pCMSd6YrhNYq9SDGUEpB0U3SKYNKzaPeaDJz6xann/0M+RMnODYxtOe9TibynEjm9vzc9zM6
      sgdwg/0d5MRyg0haBCMaoWaEaLEEiYEJynMSQsgMnb1A02qgKYLjL6pEBwcwhIkbaiROn8Vt
      FDGzNfITEyT2GPwAth8QiE8WvXw+yd0bDzj9wguEroMai+FaDeSLIdnhISpVm2c+9wL5yeMk
      IhrCa1K0PM5cuIDlqwSNEtHMENmBLPOmhJnMUCuVGT5zHlUKWZyeJjdxHLvRABESi8WoqGA1
      HVKZ5KYd+x38ANlMjHtTK2TTUeL5ETKDOZr1ChFD45WJC1QXpyk1QoaHc7iNMnXLY/xUDs1U
      ScSiDE4cIzc6sK97+aI3B3LdREdWgKWGxT++frut3/UdB9kwOhKbxXWV0wN7V2JuB892UMzO
      2CUhIdrMAbm2g2YadGKrOhHLcDY92IEr9w86sgLocpvDRITcfetbDLzwA3grd9AHn0V1V1me
      mSc+MMTawhLDI1ksT+H4hbMHvryhKMiSdPCqR+Fz6Wt/wsnXfpDyg2sMnH6ZoDzP7OwyA6PD
      rK6VieCgJAc5d/HUge1SZRk/DA/uBKHLu1/5Ohd/+Ess3PiIEy/8APWlaRYWiwwMZSmWG6hu
      HTM/zulzxw9slyL/2c4AQYc2wTFda3NGkohn0tSWpnl48x7l1RKh7xF4HsnhUQYnJjBiUUSb
      LZQpw0CT2mkDVEjn0qxN3+b29fusrZQJ/NZm1oxFCIMAz/Vx2+xwi6k6ajuDTVLJ5JIs3rnK
      3dvTFNeqBJ6L6zhEYlHCIMRzg7btMuS+4UzoGDryDTVZJqFrVN2DpvYEnucRHz/Nq2dOU1oq
      IPQERjKN7Nlkx8cpTt0ikkq3ZVcuYmKqPo570LOAENf1GDx9kTMXz1NYKiIbSeIZB7dRJ5nJ
      YIgmSiLbll0JzcAPQ7zwgANVhLiuz/iF5zl14QLlQgU1kSaZFdj1OolMGiWqYGQzbdm1n8ad
      73d0ZA8ghOAP7j3gbql/Sg4Afvb0CULZYa7RPyUaABczwxTsBstH2It8WEhIvDZ88kAtnN+P
      6EgIJEkSk8lEJy7dNlRZYjQeI2tEe23KFkhAWo+i9hlDQ1zT0fvMpk6gY7VApzvA1XMYjMfj
      xHSNjBFFa3eT3gEkdRNTURkw907jdhODkcSngi2iYyMhpmmcSPXPKvDMQOtAR5UVBsz+sWsk
      mkKSJNJGFFPRem0O0Ap/hiL984w6iY45gCRJvDqy92ljN5AxDU5nUpt/n4hnOpI3PygMRd0c
      aIokMxFrb3N/1BiKJPrGGTuNjsYCo/EYJ9PJvT/YYXx+bBj1kbAnpuoMRXpv17F4dkvsPxpL
      YfZ40ylLEscT2U9F+AMddgBJkvjhybGextzHkgnOPZYGlCSJ06l8T6kBk5rJWCy15WeqrHA6
      1duT18l4hqhm9NSGbqLjIzNjmnzp2Finb7MtoprKj5+Y3HYzbiga51K9CdEUSebCDkRUg2ac
      kWhqm9/qPJK6yfF4ri/Cw26hK1Pzs/kcLwzmu3GrTaiyxE+dPEbS2PkwZzAS51i8vcOrdiEB
      59NDxHeYZSVJ4mxqgKRudtUuQ1F5JjOC0kcZsm6gK99WkiR++Ng4F3LtnUgeFIok8RMnjnEs
      tXucL0kSp5J5Rrs040rAmdTgnhkWVVb4THaMuNqdUERbv19U1RFCEAqBH4b4YUgQhoRC/Jlt
      jzzUSbAQgkAIqq5NxW3S8F3swN9kFFBlGVNRiWk6KT1CXDV4a26Rj5Y7x3pmKAo/deoYk8l4
      yy7PxvJcnMDDF2Jd1EJuiVqo63ZpOg9qBWbqpY7ZJSNxLj3EQKRlV9VtYvkeduARrNulKY+I
      WuhRFFniWnGRirs3xWO7MBWN8+khmn7AqtWg4jo0PBcvDAkRyEjoikJM00jpJoPRGANmFFWW
      /0xslNtyACEERcdaF49o7JtXU5VlBsw4lWbAh0uFQ+sCPI7BaITPjQ3gCIeC3dg35aEmK+TN
      OIoksWhVj5wq0VBUhiNJLN+l6DT2zYwdVXXyZhzLd1k7Yr4gIUBCRpFUik37QNyomiwzFkty
      Op0lY5jf145wIAfYGPj3q4cXj1BQWKi6rNSdQ7MhGIrC6WycVEQ6dHN5RNEQCOw9CGz3AwkJ
      U1EPfT1Zal3HD0PcQ7LGtVZtsNwQLzzck5eA0ViCz+SHiGvdkYY6auzbAbww4HZ5hUWreqQG
      aOhUmy0WCfeANCopQ+dsNoWph9T8owsTJCChm2iSQsm1Dtw/oMkKaT2C5btH2lerSjIpPYIb
      BtQ9+8ATh6Go1N2AqnO0DfiKJPFcbojT6Wxflb/sB3s6gBCCuu9ypTCP1SHmgriqczY1xKrl
      MFOtsdSwqDruI00iErLUmukzpslYIsaxZIK4oXCjtITdIVGLhGZyLj1Iw3MoOhZV194UontU
      vVKWWnudtB4ha8aQJYlbpeWOsc+NRlOMxVIUHYuSY1H3HPz1mH0DEhKqLBNVdTJ6hLhmcrNY
      YKXZObaOiXiSV4fGthw69jt2dQAhBBW3yceF+Y6TXOmywov58c30nx+G6z28IRISmixjqi1x
      tw0dr6vFhY7z+puKyvO5ceKasR4+tMKQjVVBkWR0RUGR5JbSpd3gemmx45TreTPGM5lRVLl1
      Xy8M8NYnDIlWJklfF8Nr+h5vLcxQdg4Xtu4Hg5EYr41MoCnfH5WkuzpA1bX5YHW2K+IR0HKC
      lwcmdsyRb6DsNPm4MNc1Xn9TUXkxP7Fng0jRbnC5ON81oYkBM84z2RGUXZRd3CDgzYWHFO3O
      ZZIex3A0zmsjE98XZwo7WugGfteUUzbvGQZcLizsSg9u+x5Xi/NdFbWwA7+12uyyClq+y7XS
      YldVVlbtOvcr2+sMQGsF/2BloauDH2DJqnO1sPJ9cXawrQMIIbheWjqSTMhBYfkut8rbP7xQ
      CG6Ulw6dCWkHdc/hXnUnu0JulBZ7wus/2yjtmCJ9UC0zWz/apMV+cadcYNHqLdX7frCtA6w0
      a6zZvaM2XLKq27ITL1mVnjIoLzQqlLc5lJpvVA6dFj4M7lRW8R9zPtv3uFrojdLMBj5eXdp1
      1ewHPOEAoRDcrfRWPALgbmXtMVGLkKlq78U27j8mauEFAQ96zOtvBx6z9a19zrdLBZx9EpR1
      CnXPZarSudP1o8ATDrBkVTumlXsQ1D1ny9K+aFX6QtSi4tpbpJXmrXLPJI0exVyjtGmH7ftM
      Vftj4N0pF/pabGOLAwgh+ooxYW5dyGJDMLpfsGFLKASLfWKXGwabE8Z8vX+0GSzfY7mP9wJb
      HMAOvJ7Gso+jZFs4gU/Dd6l7/SNqUbAbuEFA1bU7djjYDjZELWbq/eGUG5ip96/Yxpb+u4Ld
      X9z5Ia0DL7cH2ajdEIiQqtek2keTBbDpkKUuHHgdBKvNBiECpQ9bbbasANtlOHqNstPsW7s6
      WabcDnwRsmhV+y7z0vR9mj2Uyt0NmyuAEIKGt3fh1srsPEnDpqJPElc9DENtCTKEUFldIRZN
      YGYThF6IrguKq02yA63GFM+xkTUDt16j1rAZGhlCUhR2q5+q+y7+Pja/U5c/ZKXo8vLrLxP6
      Ab4fYOgKfiiorJXIjQzx8NplivWA515+BiQF12qiqDJGNIrdaGBGInh+iCqDpOmoys4nmQ3f
      2VVB5eM3vomaHuXU6XFUwyDwA0LfRzcN7KZDGPiYUZMwhMD30UKPG/dmUewyo+deJBJR0VSJ
      IBAEoaC4tMjg6DCyquPYNrFEYtvntnSAeHvl7k1mFopceOUlZECRBQKZ4tIyw8cH+OhPLpE5
      PsHkqWOEoSAMfBACCQGKju80MePxfRXAVT2HuN5/VItbQqD9ZH+qqws8XJjGSdUxAgszJmNq
      Kh9+dI+zp8aIGEn8eZ+m5fPS557B9wKmbt8D38eu11ANmaaloio2K8tFnnv52V0XRstzEew9
      o3muh4zg7pUreG4AvoMtm2iywFpaQP2RP4fnOjh2yNRHl5hd8zk5kqFu1whCFUlY1CwJN5QZ
      Suuce/UHdnWAuufsmv3xPA/Vb/An/99vM3J8kmh+mNuX3uHY2fOggBTJYvpVFDyu3Fzgyz/2
      JULPwnUD5m5d597DZc6eHETWInhWEyOT4Obv/DaZY6cpLhX44Z/7GQz1ySdXd/e/Vwo8DwmY
      vnGd0PNaYYqs4rseQ8dy+F6IV5xjQQpYWq0wNJyiNFenvnoXM5llYW6BV3/m5xge2JtDyPL6
      Z6/0KLY4wOOHKdth+NQ5jp87RaHqUyyUmZgcJnQaPCNFGUqbOKFBNCIoll0kWWNt7j7JfB5X
      0Tlx/Bgi9Ji//5B0bpRizWMvUmQvDJCkvTdQ6XwOX3WZODmOiseDB8uM5qLUXYUz507h+y7j
      555h1HOplkucHTTIJCOMRgyqy3N8+2s3ee1nfgK76TIyksc0dqcncYNgS/XlE/bkchiZYZ55
      RSWWy5MZHEINmmSGx4glIzSsAKlpYPsSF55NEE3FOHliEltoYDfQ0zkmJodYm3mIGx1gaDhL
      VAEtkSEeT6Ls8NyCfUwWG4jlskQswejEIIVig6gWIkUzOJU1BDrJXJz05BiVxQUmThxnYDBJ
      Lh9QW4kijDiJXJZEbH9tm/2QKt4Om8VwQgj+dP5OW80pQghcx8Ewj76RW4JdQ6TdEAYBfhCg
      d2DplaDtRp7A8wkRaNrRk0/ZXkjDa28P4DZttIjZka3qc7lBLmT3p0zTTWyZ5mRJbqvI7MGV
      jynbEicnM8ws2zz7zBjvf+t9xi5eYOraVU6dnmB+ucYrr71y4Ifbqi0X+24jfBR3P3gfR0sw
      ltNYrKqcPZnm4+9cJj85TmFulmgmi9X0ePW1Vw58bVVWWg3jbbjBrffeQc6OkDNdCm6S48MG
      ly/dZPTEKCurFYzAQs+OtiW20XZDSuhw6Stf5+KXv8zM5UucffV1ynP3WFmpEI2q6Mk8WCV8
      PcWpcycOfPl+7RHYYlW7rGTZoUHqpRLX379MYWkZEfj4CGavf8zC/CqFkks+k2hrxjQVDa1N
      oYbs0CD14hrXP7xKYXEZEaz3F2gGqiLjez6+4x0gaPgEUVVv+6Vmhwaorq1w46PrrC2utgQ2
      PA8jEgEEgS/w9qGyuR0i7XL6SxqZwQyLNz5m7uEC5VKdMPDxPQ9V06iVypjxJIOj7XEpRdX+
      pFrcMrKiqt5WC5/nuCQzWV747A9RLqyxvFQjm00xcvY8F3wHFZ+FlVpbHCxxzcAN/ba6vnzX
      JZHN89yXXqO4ukqh5JDKpoloEo14msHhLMWK3daSv9Eg005lqu96JPODfO71V1lbWqVqCYbG
      R/Bti3Quj+bX0VLt8SgNRWKsWG2kZ0VI4AeMP/MCx599jlqxjJHOkfRVYnENLW5QWZkj0GIk
      EgenmE/o/ck2t6UhZqpa4H6194Vwj+JcehA38HlYL/balC24kB6m6tnM91HpiITEywOTfGNm
      qq2QsVMwFIWfOX62LxtktljUb+IRABkjSqbP7JKAtBHpu+cV03SSmkHa6C6r3F4YiMT6tll+
      iwOk1sUa+gUxVSeu6qT1SF+plSQ0k4jSEttQd2lH7DYGzZaoxUS8N9yiO2EinuxbypQtb0+S
      JEaivacN38BorCUeochyX9CZb2BD1EKTFQb6REhCRmIo2rJlIpHsG8c0FZWRWH88o+3wxFOa
      iGf6YrlqsY89KmqRRu6DYipDVhmOfvJCJ/tEbGMgEieyLmoRUTWOJftjFTidzvZtChS2cQBd
      VpiMd4fEdjcci2e38PebisZorPcv9Vhiq6hFTNUZ6vGq2RK1yG0JM85n8j3XQouoKqdT3WXf
      PiieeEKSJHEike3pXiCm6k84YcuuXE/Fm7cTtdhgmO6l2MZkPEPsMSqZmKZzsccnr8/nh9H7
      nB9o2ylClRWezY70ZGmXJYlns9vz1OuKyvnMUE/sUncRtTAVjXPp3ohtpHYRtTiTzjESjXfd
      JoATyTQT8f7Zt+2EHdfItB7hbLq7cj0b4hG7iUPkjBgnk90V29hL1AJayi7H21SKbxfmHqIW
      siTx6tAYyS4fQuXNKC8MDPdt5udR7OgAkiQxEUtzMpnrmjGnUwOM7hFPS5LEsXi2a/sUCTib
      GmRwj2yPJEmcTOQZ65LSo74uarFX6YOpqrw+Oklc604tfsYw+cLIRE9DwoNgX+S4M/USdyur
      h6Yx3wkt8YhBBiNxKq5N1WtieetiG+vFeY+LWiQ0k3mrzIPqWufskiTOp4fIGjEqbnO95dDF
      ecSulgiIRmxTbMNkpl7s6Ml1RNV4LjuGIkmb5LiW725ylsq0GKojqk5cM0jrESRJ5t3FOYpO
      57rYhqIxPjs0hhv6lJ0mDd+h6Xt4YYCgxSKtyypRVSeht0RATEXt6UqxL3r0DV2A66UlnCPu
      z22JRyRoBi5FZ/9U5KokkzVj6LLCcrN25PXmpqIyGEnQ8NwDUaSrkkzOjKHKMstW7cipJVN6
      hJRuUlwf+PuFqWjkjBirzSZLjcaRThoyEmOJOGlDp2A39k1fI9E6VByJJhmKJnuyahxIIMMN
      fO5X11hoVNsqA34UMhKm2hKPOKxTbWSsnMA/9IuVJQlDVgmFODQPUUtsWhyJXaoko8kKXhgc
      yqlkJCRkam5A0z/8ZBZTVeKGSiAO9x1b6fcs4/H0rmS/R40DSyQJIbB8j5l6keVm/cAzry4r
      ZIwolu8cqXgEtGYTU1EpOdaBB4kuq6SNCA3vaO3amOV0RaXchl1x1SCialTc5pFyoiqSRFSJ
      0PB8CnbzQKS+iiQxEIliqDKWbx96MnwUcdXgQmaIhNYd6aVDieT5YUDBsSjaFhW3uSmQt/FA
      ZKTN2D1lmGSNGIokcbN89KHUBmKqzvn0EE7gt0QtPBsn8B8R23jMLj1C1owiBNzqIPFuXDPW
      xeg8SutiGxsCeRt2KZKEKivEVJ20HiVrRinaFg9qBUSHdjoj0SRj0QxrtsWK1aDqOjT91h6n
      JU3S0kCIahop3WAwGiNnRnhQW+sYf6wsSZxNDTK6XnLSSRzKAR7FhrymJ0JCEW4qp6iyvCke
      UXQaXC12XjxClxU+kxsjpUc+kf0Un4hayJKMJsvI63at2nVulBY7XkJsKCrP58ZIaOYjzytY
      J42SUNbriyRJIhSCe5UVZrtQbp0zYjybHUGVlU3lT39TbENaf4cSkiRt0uZXvc5zD51K5jkW
      z3bUCY7MAfZC2bHWRS26U6feUpzZW2yjYDe40kVRC0NReWkPsQ0hBPera13tgcibMZ7Nju4a
      f/thwMeFua6yB55JDTIRS3fMCbqy22iJWix0tUnDDQOuFncX27A8l+tdFrVwNsU2drZr0ap2
      vQFozW7sKbZxs7zcderMe5WVbanyjwodd4BeilpYvsvt8vLOohbl3oha1D2He5XVbe1qeA53
      Kitdtwl2F9uYtyqsNGtdtqjFvHGzA+n3DXTcAXotarHcrG07g/Ra1GLBelJsQwjBncpKV+Wf
      Hse2YhuBx1R1tUcWtVbzx3UZjgoddYCgD0QtAO5Xt4pteGHvRS1aYhtbQ46C09iiPdAL2IH3
      xMZ7ulbsOd36olXtCEN4Rx2gX0Qt6p5D4ZGlfb7RH6IWFbe5uToKIXhY64/G/7l6aXMVsAOP
      pT7RQJiuF498FeiYA/SbqMV841FRi94Ix22HjWfU8N2+YZtuiW20wsZlq9Y3DBNrbRy87oWO
      OUDDd6n1kahFyW2JbdQ8e1dW526jYDfwwoDlZq1jRX3tYENsY6nZP5NFiGClebRqMx1zgF7H
      so8jXFe9L/aZCIgvwtapcB8pzUArPLN8d1+U+d1E0WkcaRjUsf7CflnOH0XZbZVZ9xvKbrMv
      hAkfhS9ClprVjpVgtIujztwpv/qrv/qrR3pFWvH/dK24a+5/6vKH3Lx6n4HRHE3bI3CazN6f
      RjejeJ5DrVRG0zUqxTKqAvdv3ieRlHjvq+/gKTL28iyzSw1UU8Wp1ZAVhWq5ihmN7NgyqUoy
      Td/bV0FaY22e23eWcKpFdF1j5sFDJEnBrtfQzAh3P7jEg+lFBocHCD0fu9EkCDwqxSqyFOB4
      IZ5to2j6niwbqqzQ8Nxt05+hU+fSO5cZGh2ksjhHpRngOQ4rs9M06nWaVkjgNtHMCNfeegsz
      HuWD710nEdHQTIPSagFZEjQsB0WWCQOfZqOJ3WgQItEol5F1A2UbLQQ/DPd1fjN15XKLYjJw
      UTQd22qy+OAOISbNeg0jGuH6d7/D7HyBbCZOs2njOD7z9+8RSaaol0rImkqlWG69v12eVyBC
      JuKZI6sY7cgKIGBPLk/f91FkiQ/ffJNQjhNLGCgCJO8+cirG9TffJjd6nlhEJoxryB4IERAi
      4ztVSmtV6nKAlfBYWWhQq1TIZlLE81l2omFteO6+qzGnbt1nqWgTOTXG9O07oEjM3a8j3IDB
      szK+7xGNp5i5dR+7UkAkUoR2HcVMcOfSPZREDt1M8JnPfmbPe9U9G19sP9CWH0yxMjPLnahO
      PG6yunSf2YUqYxND5HIJ3FqTdz74gJd+/GdI59PcvnKHVDLCh9/6Blp2EjOiEFFlpmbXuPDM
      CcJmGStIIepzWIFEMpUlmQ85cerJ9tf97pVCWefE8QHe+N1/hZk+yfCZcWiWuH/VxtQEUjJB
      4PvIpsSdq9fRVIn7MyVOHR/k1tvfhMwQ9dUa0XScRDqNpu3eF2D7Hpp+NL0DHZxr9AcAACAA
      SURBVKkFCkXIGwt3d108V2emWCk6DA/EqDYFg8N57PIaLhEGhlPcv3aL7MA48aROrVqi1hAc
      PzHA9feuMX7xNLLrgaZRq1tYxQL5iWNEDRUjEd9xYyOts/rv5wtXyxU0SdD0wS6tIPQY0WgE
      wzCQNIXQ84klYjy8cQMtliE7lCPwXIIgxK4UsUOV3MAAsfjeNIUy0o4lxbVyhYipUa40Saei
      NBoN5mYWGcynEJqJVWvg1iuMnL2AHLpYtQaGqbEyN4dhmrz1rff4oR//ISwnxJRs5EicdG6Q
      0vwD5GicVCYLoUws0T6dYmVlgWLVJbCqJDIjZEdz2OVVHE8jFtORoxGW79zEV5MMDWexKwXK
      TVDcKvHBUQqzs+SPncDUFSKxGPIeqikv5SeOjC6zYw7wrYW7bf2uCENc1+2Y2Ea7Xzb0WyXV
      nRHbkNqOtR2riRaNdKeo6wCwrSZmNNKRa7+YnzgyXtbO7AFoHaa00yhx/4P3eLhQQQ0azM4W
      yKYNvv2vvooej3LpG28S+A7Xrtzj+KnJA197g1+0naF26523WCp7CGuV+WWLZBS+/Qdfb9n1
      re/gN2vcujXD5InxA1/bUFSEaMMFQo9v/vPfIT1xnFuX3iOWHaE0d5cP3ruKEljcvDXL0s0r
      1AONXP7gzfpSmwQ09bVFvvXVtxkfz/P+964zcWyMa2+/weJak+Xbl6lUbC6/+w6p4WNEzYNH
      4ROxDMYR8VZ1ZOKQ2GgHPDiSA4OUFueZu/eA5YUV7HoVLRqjVKiQTkcolZtIgd+WqEVcM9Db
      JNZKDQxRXHjI3NRDVuaXsWpVjGiESrlBIm5SrTsIvz2xjYRmbmGb2z8kBseGuf/RB6wsrbK6
      XMRqOKhKSCBpSMIFWadZb6+ILdam2IZmxojLNlev3aMwN0/dahIIGc+qEEnlqBWWicaj1Kvt
      ZQojRyi20bF+gKvFhbaqB5vVMlXLY2goj2M3qNc8ZMknmkhQqzZIpaI0LI905uCkSxPxDJbn
      tlVeWy8WsAOZfD5Fs1HDdiQIHaLxOPV6k0TcpOkEpNIHJ4I9nshRcqyDp46FYGl6msz4JKok
      qKytEU2laVo2ugqhrCH5DmokjmkefDAfT2SZbqM8Iww85qfnGT95DN/zKRcKxOMRQlnHbVSJ
      pbPUy2XS+fye8f7j0GWV14dPHll/QMccoEWl0puy3p3wXHaUhucyVesvEZAXcuMsWdW+OnVV
      JZlXBiZ5b+VhX50FDJhxnsuOHpkDdGzv1G/iEbIkbfb/9hNUSSapm0e6rB8FUnqEqKoT6xKh
      1n6RNWNH2h3WMQeIqTqJPdoRu4mMHsVQVBKauWs7YreRM2NossJgJNEXNOsbGI62RC2G+0iX
      QUZi0DxartOOOYAkSYxGe09nvoENVme5z+zasGWDWa4foMsKeTMGwFA0gdInHJ8DkfiRk2d1
      NH08Ek31lM58A3HNIPfIzDEaS/UFd2VKj2we6EiSxLEuk+vuhPF4ZjMrZSoaI30yYXSCIaKj
      DqDIcteZnLfDqWR+Sz2OJiucSHSP9Hc7SLTsevSF5oxYz/dOpqIx8RjB77FEtudiGyPR5J4M
      H+2g499qOJrsqcrjcCRBzog98fOxWIrULjTsncZoNEX6sZBHWieE6qW+19nUwBNnEqaicTLZ
      O7ENXVY4lRzoCDVKx5+0LElcTA/3ROUxquqcTQ9t++BkSeZiZqQnoVBcMzid2v6FxjSDM6nu
      6jJsYCKWIb/DJnMsmtqTIr4TkICLmeEjO/l9HF2ZakxV47k9SJeOGrqs8Fx2dNcBHlV1nsmM
      dFUU0FBUnsuO7nryOxJNcize3f1A3oxxKpXfcZaVJIkL6aGur5qnU4Nkt1nBjwqHPgjzg5C5
      1Qr3FwvMrJQpVi0cz0dTFVIxk4mBNCdHshwfzlAPnHWCrO5QIyY1EzcMsANvk7dUorU3MRUN
      U1HRZKXr1Ihx1cANfZq+jxN6BKFAktY5/RUNQ9GQJYl7lVVmG6WO2gSfUCNuUB82fW9Ta0CS
      Ws/TVHQMRSUUYdepEYNQUGo6LNWalJsOXhiiyjLpiMFwIkImYqBt08+wH7TlAEEYcnVqiT/6
      3i2+e32axWKNMNz5MhKQS0Z55dw4r71wnNiQipA7M9giisZEPEPDdyk5Frbv7ViUp0gSEVUn
      a0TRZZWZ+u5NPIdBVNWZiKWpeQ4lp9WfvJNdqiST0E1yRoxm4LHQqHTsNDZvxskZUYrrpRgb
      YhbbQZMVEppBSo+wZjeodcgJZEli1MwwvWrz3ellLi8WKVoOXvDkxKnJMpmoznMjWb5wbIjX
      TgyTNLR97xcO5ABhKHjz6hS/+ZVLXJ1eot0Jc2wwyU/8yBkunDnajY0sSaiS3PYg1mV1fQAc
      7WBTJAmlTbvkdXLaTjimJiuEQrS1Ih+kt+IgsOyQj6frvH1/lapz8DbRuK7y585N8G++eIrR
      ZHTP8bVvB5hdLfM//bM3ePva9JF8aUmCZ88N8VM/co7B/OFivMPU+Xfymp8muw4LEUp8b6rE
      N26u0vQO7+ymqvBvvHCKv/TyGaL6zhvofWmEffOje/yt3/pTKo2jX/J0TeEXf+w5vvyFU5S9
      /Qs1qJJM2ojiBF5H6FckWgdVsiRRdg9mV8aI0vQ96v7R27Xxve3AOxBTWkTRSGgmZbeJ2wGy
      MhmJhG5i+97BJJJ0E9eR+Xtv3+Pu6tEXA57OJfnVH3+Zk/nktqUmuzqAEIJ//Kcf8Wu//RbB
      LjH+UeAXfvBZ/vovfhErcNdF8rx1AYmtYnQbInlRVed2ZZlCh0QaNjAWS3M8nqXm2VS2FclT
      MBV1s5QhomrcLC93lA9VliQupIdJ6iZlx6LmOesbV3994yptbqg3RPJ8EXKtuNiRwb8BRZK5
      kB7CVLV1kTyXpu9uag3IkoSurIvkaS2RvBtLZf6br7xPxe4cW0dMV/nbP/EKn5scfCIk2tEB
      hBD8v9/4kF/77bfajvUPip/9/EV+5S/96LYMBY/CD0OuFOYpud3h+BmJJjmfHt4zXeqFAZe7
      xJ/fyo+PMBTdfmZ7FBW3ycdrc0cu2LcdZCSeyY4wsI/ivu/NrPBf/fH3jiTk2Qu6IvO3f+JV
      Xj+x9Vxo25EmhODrH9zh7/72210b/AC//84NfuMP3tmV+CgUgpulxa4NfmgRs05Vd+bOb9kV
      cr242DXGaQHcLC9R2mMFtHyXK4WFrgx+aLG33SgtUtlDjvX2Spn/9qvvd2XwA7hByK98/X2u
      LW1NK2/rAA9Xyvx3v/WnXRWO2MD/87X3efPqg23/TQjBbL3Eyg4c9p3ETL3I6g733eBB6qSQ
      w3YIheBGaWlHCppAhNwoLXU07Nn+voLrpUXcHTj9q7bLL3/tA2ptZHkOg6YX8Mtfe59y85O9
      0xMOEIaCv/1bf0q92RsGtSAU/J1/8k2q1pMzacPvXTeXAO6UV7Z9qTXPbqt18CjghH5LxHyb
      yWqmXuoZQ58deNzbhtNfAP/Hd28wU+7+JAawVGvyv7x5ddOuJxzga+/f4f07c1037FEsler8
      g69c2vIzIQT3Kqs9WZU24IQ+04/pCgghWgOwh4nFlWbtCS7Wpu/1nG590ao+4YDXFov80c2Z
      HlnUwjfuzPPBXGsi3eIAQRjy9//4vZ4Y9Tj+5ZtXWat8ElJUXLvrIcZ2WLAqW4hsi471hNJL
      LzBdK2yZbWfqxZ4qzWxguvYJp78Qgt/83u2OZxT3ggD+/nu3EEJsdYDvXn/I1GJ/iDQ0bJff
      /c41YD3270JNzH4QCMH8Oqf/xp6kH1B2m5v1OW4QsNQnGggFp7EpPH53rcL3ZnsntfQoriwW
      ubZU+sQBhBD84bs3e2nTE/ij924RhiFeGGxReOk1lq0qoRA4gd9T/bPHsTHo1+x617I++8GG
      XV+9NdfTEPZx/PHNmU8cwA9C3r423UNznsTMcpmpxSIlx+oblRKAZuDR8BwKTqMt9rtOoWA3
      CNeFv/sJa3adUAi+PbXYa1O24I2pxU8c4MbMCo0Onsa1g1AIPrg731ez7AZKrtV3djUDj4bv
      UO2DPcmjaPgu94sVlmr9ZVe56X7iALdndyaxGh3MYGo6mejWJo6IriIpKi+dHSdltP5N11Vk
      QJJkkpFtuG4kiVRk/7Qkt2dXd62pWX5wj+uXb+04D/tek6b1ZL65WSly68qttqgMoSW8t99a
      HM+us7K0syplvVCi2GilV+uVVrggAh9nPU/uu+6+15mibe27crS8PM/U3QfUH0k22E17856h
      7+G4PvN3bzN9/yGVQmvv43veruXv2+HjxZVdwx9NVRmOG+iPVQE8+veNmn9DU9ElSBqH51La
      LJN7uFze8UNJw2DoVIak2iQQKpW6R0SFYsNF6Bq3pxY5e/Y4a0srjAzGKFcDJGB8KM5cscn5
      gSgPKx6h4xBJRlFCwXguzp3ZAoYK791b2vHeD5aLNHeRDyqvFajWQ2auf8xSySemgabrBLKG
      szaDNjBMba7K6MkBbt9bZDSjMHD2BRory5x55ix33n0LR01QL1QYHIwjx7I01haJxhOUyjWe
      +fwXiG7znGuus+8DptW5RSrNABE4CNfi6nsfMXnxGRRV4v7HNxg7cQqOnycbU6msrTBz6xbR
      ZBxfUiguF1HsJvlnn+XY2N6tkgfJlK2t1Th5/gSXvv4mA+OTNEVAIibz8M4iyRjEcgPEh0+2
      qA2Hxli4cQvvzCj3bj8kk8rw8PYNXvixn2Ywu3fP9/3i7oKJZwczaL7DsVyGlXIV1TBwA59B
      TWXWcokrgoF0itm1IqoRJYbHxZEc786VCD2XRCxCrekQVRWOD6S4vVRCkiVyEZ2ri0W8HXxv
      070eTTk+Dttu0nBDZElB1VQ822a5aqPIEiuVJi+dm0QOPJ49NUpMVzBUBYTADQTZqEG16VIu
      V6l7YKoSkqzQaDq4js1yZfdlcbXSwN9Fo1bTNZRQUK1bBI5NbnySVD5PLhPD8ULchoMsQ6lY
      JAwCdF2juFokFtW4deU2luXiOU08q4yQddYWl/E8D9f2OHFuEm+HMW4H3q52PYrS2irl5WXc
      egXLA9WIIMs6wyNZtGgUI2JiqhLVlUUqNRvX8XDsJkEomDxzkoGRYSSxv76Jg1SIqnhM3Zvh
      +LPPowQOY6eOI0IQdo1YfgiZkFAI8uOTHDsxim4q3P34KsncEIQeshFF3Wcj1m6TGMBytcFA
      Mkq1YaFqJq8fH+B4NoYGTGQSvDqeY7XawNB0ROiTSiZZKdc4lU/z0sQwP3gsz/FMnAu5GGt1
      m2xEB1kFVWfE2PnZbRbD/bXf+H3euDy174f3OFRFxt+mY+ewyKej/I3/5IeO/LqHRT/W1MPh
      tAY6ibfuFPjatZ1ToKoiY8gSTb81hkxNxQ9abZmyJKNKAjv45HspEoQCNFVBhAGq0vq8Kkv4
      Yl1nIhQkDJWas/NKvem/Spu8L4O5NF84O4KQNU4OxkGSef70GPlkjJdPDZFLxXnxRPuUGqos
      t00ZuPLgHtev3sZtlJifXyP0XW5e+pC1pSWuvX+ZtYU57ty839a1ZalN9nwRcu3Nt1gr1Vme
      eUDT9mkUV5memuHB1SssLSxx64MPqTXa6yVol8XNtxu8+4038fyQ6bv3AFiausfM9Dz3Ln/M
      yuIyN97/kEazvfqdvZJ4fhDS8FoDPhQCy/VwgxA/FExm4oShIKarhEK0+s0NlUAIdLm1J2i4
      Hs76NRw/wF3fo+w2+OERB0jG2iMdSsVMdEXh7FiGRCyKrJsMxHU+f3GCWDLDoBEiHYINIhWL
      tMmdD/VqjdD3mX8wS71aw7frlNaKWE6AWy2ysLBCcaW92iJD0dpkuQioVRt4zTpz07NYlk95
      dZXCagnD1CnMzVMqFiiV2ktltktm61gNPM+ntDTH4mJrP1hYXqG4WsA0NNZmHlIuFynvEbLu
      iH2GcE9AUnllPIOpqfzo6RFUCc4PZfjs+ADHcykuDiQ5k0txQJb1TWy+wfF8e/R3jueTS0VR
      VY2BZJR8RKHohNycXkIEDol0Fk2R2uZfmRxIY7bJCaPpOqXVVax6jeLSCqVCCdXQaZTLhLIM
      AUiCNkUtDPR27BISmq6wurCAXW+wMjuL4wOhR71m4YcBmqZDm+FkuxQiqqYTNKusrlWpr62y
      uLCMrCggPGr1Jl4g0DUd4bdXvjwYa7ftNWSl4fPyRB5ZkhmOG8yVG3hhyEDMJBs1UVWVgQNk
      Fh/F5h7gWx/f5z/9P/+grYtENJWm5wMyMUOi4Rxdjfcv/fTn+OIPHm/raD8MAvwgQNd1At/F
      9yUM82hoyE8l81Rdu61DJ7dpo0ZMZKDZaGBG927e3i9ezk9yudBe84vTtDEiLd6fZqNBpO1B
      +yRkJ8Z//UcftPW7I8koK1ULIUnkY8Zm/t4Owhazh64SBMHm/uFAdm384YVTo7T7DpqbqZLw
      SAc/wItnxsjo7VEryoqyKWqnqPqRDX6AtB5tm/JRXx/8AJHY0fHdG7JKQjdItkletTH4N+w6
      KkQUjReGB57I8e8Xi1WLgNbB6Erdxg1C7PUVMhCCuuO1NfjhEQdIx00uTPaGkm8nJCIGzx4f
      JmtE+4o735BVEprRd3ZljCiKJJMzO8ek1g6yZox01ODsQH+wTG/gZC7xiQNIksRPfvZ8L+15
      Al/8zAnikRYjWS8Jdh/HQCSOIstEVb3t2bYTGI62xCwGzURX6R73wkik1bf842cPrqDZSfz4
      2fGte9Of/ux5IrtwqHQTkiTx868/u/nn8Vimxxa1ICExtk4f3k92xVVjc5IwFJWBI1ZSaRdJ
      zdycJL58ZoxYn4wvTZH5yfMTWx0gk4jw868/1yubtuCl06O8dGZs8+85M0ZC6/1sOxiJb5EP
      HXjs773CsUR2c9aXJKklJtEHAdrxxCeiFtmowb928ViPLWrhp85PMBAztzqAJEn8ez/1KulY
      bweaqsj81Z9/fSt9hSRxJtU7jnpokVI9LmqhSDKne2xXWo88QV0e14xNWaheIWfEnqBb/3de
      Pk26zZTlUSGmq/y7nz2HJG2Tns/EI/y1X/jBXti1iX/9i8/x3InhJ36e1iOMxw6ueH5UOJnM
      E9lmts8ZsZ7JCCmSzLn00BMxvyRJnEzmifZIfVKVZM6mnySiykVN/uPPX+yJTRv4Dz53noH1
      Sf4JB5AkiZ/9wkV+8rPnum4YwIXJQf7qz72+bWpQkiROJwd6svEciiR2dL6WsstARyR89sK5
      9CCxHe6ryQoXMyNdF7mTgAuZ4W0nC4CfuTjJj50d2/bfOo3XTwzzFz/zidD2tolZWZL4m//2
      l3n+1EhXjRvOJviff+mniexS563IMp/JjnVV6jRjRDmfHt41X6/KCp/JjmEq3ZtxTybyDEd2
      Z4ZL6REuZka6uh84nRpgwIzveEdZkvgvv/Q8zw53N4FwJp/kb/7oi1vU6XflBi3VmvzlX/89
      rk8vd9y4oUycX/8rf4GRgSRlx6bqOjR9H1+ESEhoskxc00kaBhnD3BRq6AQB7aPIrotHqJKM
      HXg0/XWxDdES29jgLI2oGrqs0gw8LhfmsfzOdtedTOY5Hs/ii5Cm79EMXLwwbDEdSBKGrBJR
      NUxVQ0Zi1a5zvbTY0Z5cidbgn4hlNicLy3apNGw8z0eWZeIRnVQ8giRJFC2b/+z33+XW6u69
      AkeBE9kE/+uf/zwD8cd02fZih643Hf7GP/gqb+3A1nYUmBzN8Et/8fMIU6Lu7d39pEoSWTPK
      WDxOzbeoep1ptRuJpsgZUdbsBiXXwg38HW2TkIioGlkjStqIstAoP8HVcxRQJJmJWBpJkijY
      Deq+s+ugViWZlB7Z1Ni9W1nB3oGx7TBQJZnzmWG8WsB3rkzxvesPuf1wmdVyDc8PCMMWaa+i
      yCSjJifHcrx0fpJnz4zxL+8vcmmuc4RnL47l+O9/8lXSkSdDxX3pA/hByD/6+gf8X3/0Hs5O
      HSJtYHAwwWufO8npUwNblqWDQJNl4rqCph7dzKZKMjFNxw58nDYHS1TVUSSJhu8e2ayrrLM+
      O7s44u6/3zoldgP/SLmM0lqE5Qc1fucbl/nw9izeAQrmJAlGB9L4uRSNVIy263G2gSpL/Fsv
      nubf/9z5HSWU9i2QIYTgwVKRX/vtt3n72oNDkeZqmsIXXzvFC89PoLZZH/LENWWJTERHkdtT
      PGldo0V13vS9I6MV0WUFQ1GxfLdtZgtdVghEeGTMGIokkdajBCI8lCMkNZPSosU//Bfvcn1q
      8dBtOHLUxDg+hJI6/CHeS2N5/srrz3BuILXr3u3AGmGhENyYXuaffutjvn1l6kAcorqq8Mzp
      YV767CT5fGdOKicTScYTMdbsOjXP3nPQqJJMyogwYMYpORbLzdqR2yQjMR5PYygqq806Vc/e
      c1UwFZWsEUOTFRasCl4HJJJSeoRj8Sxl16Jgf0JgtRsiikbWjJJVY/yj33uPf/K194+8EzCe
      T3HhlXM8tBysA0QcpqrwheND/MJnTvDCSG5fUUXbKpFCCOpNl4/uzXPp9hx359eYX6tQtRxc
      P0Bd3/CMZJOcHM3y8plxTkxmuVEr4HRIiG4Dw9E4r42OI0tQ99x1UQsPX4gtG9eoqhNTdQIR
      crW40HGKw9FoinPpQQIhaHgOlr8hAtKyS5cVIqpGTDMwFY0Fq8Kd8kpHWxwNReX57BhxzcAJ
      fRrrz6ulEhkiI6EpChFFJ6bpmIpGuWbx1//u7/DBrdmO2ZWKR/iVX/ppjEyCD+fXuL9WZaFq
      UXNavdiqLBM3NEYSUU7lErw4lufFsRwpUz9Qde2hZVI3IIQgCAV+0MpESFIrZakqcmvHbzf5
      5uw03j4byQ+LoWiML45Nou7R6umFAR+vzXVF9hNgOJLkQmZ3sQ0BzNdL3K7sTFVzlNBkhRfz
      4/sqNVkp1fiP/od/xt0uUByausr/+Jf/Al96+QzQKn32Q7E+viRUSUKRpUOVkx+ZA+wGy/P4
      +swUTb+7PPXHkyl+YHhsxwcUCsHlwlxHsjW7YTKe5XRyZ1HqlWaNa8WFrra2m4rKy/lJzF1O
      jqsNm//w7/xTrneR4c3UNX7jv/hFXu1QDVHHpdtDIXh3ab7rgx9gulrhfmV78lohBA9qha4P
      foDZXcQ2LN/lVnm567wOduBzo7y0494kDEP+1v/9la4OfgDb9fjP//ffY6nQGbLfjjvA/UqJ
      Zat3tOYfry7T8J5kMqh5Ng9rO7O1dRI7iW0IIbhdXu7Ihnc/KDkW843tCdJ+543LfO293pAn
      FyoNfvnv/SFhB8LnjjqAGwRcXetOHLsTvDB8woZPRC16h+3ENlbtek9WpEfxoLr2xNnHWrnO
      //bPv90ji1p459o0f/zdG0d+3Y46wN1yESfozWz2KB7WKlTdT0om+kXUYsGqbopthEI84RC9
      gCdC5h5bBf7hH75Lqdp7IuBf/xdv4h7hQSx00AFCIbhX7g/xiFAIptZt6SdRi0CELKyLbWzo
      /fYDFhrlTdrHQqXB77xxuccWtTC/WuYr7xztKtAxB1ixGlh78EF2Ew9rVQIR4oT9JWqx3Kz2
      Hae/GwYU10l2/+R7t6hb/eGYAL/7xuVd5WoPio45wGKjf14ogOV7VByHom31laiF5XtYvtuR
      ArXDYG3dIb/Sgbj7MPjw9tyRZoQ64gBCCFaavRe0exwrltVVge39omA3qHZJYHu/KDtNSjWL
      m9M7U9f3AkII3rv+8Miu1xEHCIGqu3tdiVOp8HiAVK9srQsPfRerfnSb1Ypr09glzr770fvM
      zjz5wp26tQN9oqC0ukZp7XCb16LTwNtBa6C0NM/dW1tL0V3bwbEs7G2Epp1amSvvfkizXmNh
      bgHPdSisFHDc1mdr5f3V3tuBx/UHizS7LGa9H3x8hDK+HeGocHx/T+58p1hCSSaY/vB9tFiC
      RrkBBAyMj3H1W2/w3E/8LNmkRHFmjrc+vs2Fl85gNQVuYQYtN4Zp6MiShm8XKDUkJo+NoBox
      soPZHe9ZcRxMfWe7oskcVq3Ix9+8jBQfxW0sIySTTHYERSozv+KRiYRosQT1co0Tzz9PY3We
      ppLArju4jTK1ZoC1Oo2Zn6RcqDIxkaZhh+RyadRokoHBJ7ugqq69Y1BWLNY5dfYYiw9nsRs1
      lpfLYFtkx4YoLBZI56I8mC4xlleQMsdI6CEXXjrFvWsLxCI2H965hWZkSWVNXF+msTLD0MQ4
      l967xomJDA2R4PUvffaJ+wrg5uz+Z//xkWGeHY/y9fen2BCPiUcNGpaDAPLZDKeGoly6Nb/5
      72gGadkllc3w8ADqpA8WCpvlEIdFZxxgH6lPSRPcv3wDIwgIPJdQQDqfpdmokRoaxTRUZm/e
      ADVKOplASWYZSAQs1NbQVBPHqiOQ0CTQDZPC7DTHX3lt13vavoeq7vzQCgszaOkhUEykwGPi
      zFkEEtUlC18KiRgKg5MncKrLVMOQMAjJTU7g+wb3P/4QxYhx7MIp7lXWUAC8Bk0nQSAUqoVV
      xoe374PdrfRalwPu3V3AXltg6PRJTmTzNFfWCHSds89cYHFpmtHJEUKnhIZHOhnn6nvXmXzm
      efSgwsDxU8zfmSUMAoSkkMqkaDZsRo9NomsB0XR+x3s/WN7/yja3WCYbdfnR118Cp8GJ4SSX
      bs6TyuRIiAYfzdUBwRdeeYZBReLu8jLpkVGi1SUW/QgvZxKsLi4zU9o7FFws/P/tnUtwW1cZ
      x3/nvq/ekmXLluJn7ZrGSZqmDS01nUxpKYssSoYZOl3RBZQZhuG1YGDJFlYMqy5YsQ8DC2AY
      FtABAu1MO+lQ2oxDcZ34bct62LqyHvewUJzYiV+6uZIyWL+tJfnT1f2+e853zvn/87hS+nLW
      uSV7gdYdhz/OeTfbaBq3ztrKOsn+w6UdLVUlYndeK6d56qzMr9GXSbX1v169ep23r9085qs1
      BhI6iZ4kslohHLJYXs5hh0Jo7jZz6yU2Sw5jQwMERB0zFGRtPU/UVlnMG70ezgAAB+JJREFU
      bXNuvJ8//fPGsZS6wwGLt9/6LprqTTZ/b9QtQPUq1i4lM9f+RmTiDEZlAzWawagXmb15m55U
      nEJhm4BWw7WiZIbS996nqEfe/I24FM/+KQs3PiJX1RgbirFWVBjoDfDx+x/SeyrN8sIKfak4
      uWKVyalxD59+FOq+N39xdYmPPvqUZ55/ktn/LjE2McTN968T7E2xPj9P32CG5cU1njh/Fk31
      8Js0daFqLGZrLGYbW6RVVYG6S/2+874zswv7vnt1o3BsmXo/a3ZLEsCrnj9Itp0y9YrD+tIC
      AZHE2M7i5LOsKS66GcIK2qys52F3AhyTgKahKa6nvTZlx8EVFgufzlPTE1TDkkI2RzRzikox
      x4pwKZW8tTI1oXg6gVZ2HGTd5fYntyiVquDW2FjPIe0oar3MysIy+VyRas31VC2jAe/yMxfP
      T7C5uEwgmeTW3Dz5mspzk/3MrxRIxSzm8xVOxUz+8kGjo1NvwnXSMjXfVC5akgCGqmIo6rHt
      OnejaArF9VW2Nx2qi3MEQga6qREIx8ivZzExAG/SI1HTwqXiKQFUTaOwuoFiQ3G7SsiMo9sm
      WxsboGkoUqAqCi7Nt9bCuuWpPatpOqViDqcUILuUZ7UvhGqa1MqbVGXDAMTQNGSTlqbQUHgY
      Sh7cUDiKzdI2IdukLiWRoIWBzruzG3xhJMCHK9ssZgsYdW86SsloyPMZ8vtpSQIIIGqarDpN
      /qhC4fHnplFMEwWoOA66ZSEmGwciGB99qLjipkXZxZOUyuATU6QnXXRdp16r4Loq6VF/hjtx
      K8BWbbvpghFPn2L6lV4My2RS1imXa1x4YciXmExVZzxz8AT5KAxdo+ZIqtUqwjBxN0s8mYnz
      zqd5BhM2OV1lZuFga97DGB5I+NIBglYlgBCkAsHmEwDQzHtVwbDtQ17ZZExArx1ks6Z4Over
      qGrDMoiG2cbDT7/ukTSD5Ledpjx+dzCsO9dLqFi2f1HFDJuhobhn98/3Pnhw8nxrtbGCu7jm
      7cbfYWof2UyvtGwrRCYUPvpFbSRimEQMg4QZfAQ0k+9hqXrjrK32aMiG79BjBcn0xcj0dk6L
      9SA+OzXi22e1LAHipkXUaL9W5kEMRxryGJaqEXuEzDZSdhhFKA+oKHcSTSgkrSCKELx08fFO
      h7OHU30xPjPsXzu4ZQkghGAy3tOqj28KXVEYizZWYIUQDD4iphaKEKTvSJgnzOAj4TMAkA5G
      71rAXp4+49lDuhVcnp5C8TGeln6zkUiUkN4Zee7djMfi2LuGGA2zjc4/nfrtCPYdMV1FCIbD
      3rsufqEKhcHQPW3PicFeps89XPPBL2xT57WXn/ZTPK61CaAqChf6/JuweCGg6ZxO7DWwaJht
      9HV0LqArKmP3KUOk7Agxw7+JvxdGwglM5V6xEELw5pXPNxa2OsxXX75AMuavAWDLv1U6GGY0
      0pmJlAAupgYw9lkEaphtdG4oNBHtxbxvwVARgslYyqMD/cMT0a091X+Hc+Nprlw615GYdkgl
      wnzzyrRv7c8dWn6lhRA8neonZrbf1OJ0Ty8Dwf0nl0IIHoskiXbAbCMTiNJvR/b9W1A3mYy1
      365WV1SmEgP7Jp8Qgu+//iLDA50ZoimK4CdvXiZk+/9btaXU6IrKpcwQwTbOB8aiMc729B5a
      MVRF4WybzTaSVnBf66AdBI25wWMR74tQzaKKo01HIkGbn377VUL7SIy3mm995QWePzvq69h/
      h7Y9awO6zkuDI21pjU7EElxMpY/1uDRVjaeSp9pib9RnhzgTT6McMcTZcXlsRxLoisr5nsyx
      noSnRwf42Xe+jKm3b83itS9e4Buv+j/02aEt0oi72a7XeGdpgdub/qswq0JwvjfFRKz5pfKq
      W+fjjSVWWnQ4fSSUYDSSbMrAWkrJslPkRm7ZN7n23YR0kzPxAQK6eeyGgJSSf/xrlh/8/GrL
      D8u/cflZvvf6iy1tw7Y9AaBxET/J57i+tuybblDSsnkmNUDMtDxXCyklC6U8/yms+abOFtAM
      JqN9xM2Ap7gk4NQq3Mgt+yaaJYDBUJzRcPJI8eCDmLm1wg9/8Rtu3vZfJNc2dX70tVe4culc
      yyr/Dh1JAGjcbBW3zo2NLDMbWU87RwFipsXpRJLBcKSp6npgXEiq9TpzmxvMb+U8V15T1RgO
      JfYsKj1UXFKyVt5ktpj1rGQtgD47zEi4h6DWnIz4fpTKFd769V/51e/fbcoV5jCenRrmx298
      ibF0T8tvfuhgAuwgpaQuJfObReaKBVadrSOfChHDoD8QYjgSpceyW3KhGnG5rDibrDhFchXn
      SOcZQ1GJmwFSdoSeO1sJWhFXoVpmqVRgvbyFUz/80Lqgsd261w7Rb0cwVc3X6yWlZHYxyy9/
      e43f/f1Dz4lwbjzN1199nktPTfi21fk4dDwBdiNl47TWVrVCoVLBqdWouy6Ixs0V1HUihomp
      qm2pDnvjknfNI/a6RDZslQKaedeUul2xSSnvmlo4tSpVt45kt0ukQUg3UIXS8piklGQLJf5w
      7d/8+b0Zrs/MH6ooIURjlflzZ8e4PD3F5PCDZt/t4JFKgC7/H0gpqVTrzC1nmV3Msp7folyp
      oakK0aDFYCrOSLqHaND7fM0vugnQ5UTT+Q0eXbp0kG4CdDnRdBOgy4mmmwBdTjTdBOhyoukm
      QJcTTTcBupxougnQ5UTzPx9rH3QaAccbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sales by Cuisine' width='164'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='53' name='Total Sales' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
